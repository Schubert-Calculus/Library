
newPackage(
  "SchubertIdealsTest",
  Version => "1.0.0", 
  Date => "Novmeber 16, 2016",
  Authors => {
    {Name => "Taylor Brysiewicz"}
  },
  Headline => "Combuting Ideals for Schubert Varieties",
  DebuggingMode => false
)

export{
"lengthOfPermutation",
"completePermutation",
"partitionToPermutation",
"stiefelCoordinates",
"isCondition
}

---------------------------------------------------------------------
----------------------SCHUBERT IDEALS-(Test)-------------------------
---------------------------------------------------------------------
--This is for methods that are being tested and developed prior to 
----committing to the main package file
--
---------------------------------------------------------------------
-------------------------CONVENTIONS---------------------------------
---------------------------------------------------------------------
--  flagType is a list {a_1,...,a_s=m,n}={adot,n} with increasing
--    entries. This specifies the type of flag manifold.
--  Example:
--    flagType = (3,6) is the Grassmanian of 3-planes in 6-space
--      here n=6 and m=k=3
--    flagType = (2,3,7) is the manifold of partial flags consisting
--      of a 2-plane in a 3-plane in 7-space. Here n=7,m=3.
---------------------------------------------------------------------
--  Schubert conditions are given as partial permutations 
--    for example, w={1,4,6,8,2,9} in flagType={4,6,23}
--  w must have descents only at positions of adot, where
--    where flagType=(adot,n)
---------------------------------------------------------------------
---------------------------METHODS-----------------------------------
---------------------------------------------------------------------
--  lengthOfPermutation
--    Input:
--         [name=w,dataType=List,mathematicalObject=full permutation]
--    Output:
--         [name=len,dataType=integer,mathematicalObject=length of w]
--    Description:
--         returns the length of a permutation
---------------------------------------------------------------------
--  isCondition
--     Input:
--          [name=w,dataType=List,mathematicalObject=partialPermutation]
--          [name=flagType,dataType=List,mathematicalObject=flagType]
--     Output:
--          boolean
--    Description:
--         decides whether or not a schubert condition is valid for
--         the flagType given
---------------------------------------------------------------------
--  <INSERT METHOD NAME HERE>
--     Input:
--          [name=,dataType=,mathematicalObject=]
--          [name=,dataType=,mathematicalObject=]
--     Output:
--          [name=,dataType=,mathematicalObject=]
--          [name=,dataType=,mathematicalObject=]
--    Description:
--         
---------------------------------------------------------------------

lengthOfPermutation = method()
lengthOfPermutation(List):=(L) ->(
    if max(L)!=#L then error "Expected a full permutation";
    len:=0;
    for i from 0 to #L-1 do(
	for j from i+1 to #L-1 do(
	    if((L#i)>(L#j)) then len=len+1;--tally length for each descent
	    ),
	),
    return(len)
    )

lengthOfPermutation({1,3,5,6,7,2,4,8})
lengthOfPermutation({1,3,4,6,7,9})


